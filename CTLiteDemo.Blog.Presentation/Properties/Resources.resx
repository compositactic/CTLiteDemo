<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttachmentCompositeContainer_AttachmentsHelp" xml:space="preserve">
    <value>Gets the Attachments belonging to the Attachments container</value>
  </data>
  <data name="AttachmentCompositeContainer_CreateNewAttachmentsHelp" xml:space="preserve">
    <value>Creates new Attachments from uploaded files and saves it to the Attachment Archive</value>
  </data>
  <data name="AttachmentCompositeContainer_CreateNewAttachment_ReturnValueHelp" xml:space="preserve">
    <value>The newly create Attachment</value>
  </data>
  <data name="AttachmentComposite_FilePathHelp" xml:space="preserve">
    <value>Gets or sets the file path of the Attachment</value>
  </data>
  <data name="AttachmentComposite_IdHelp" xml:space="preserve">
    <value>Gets the Id assigned to the Attachment</value>
  </data>
  <data name="AttachmentComposite_RemoveHelp" xml:space="preserve">
    <value>Removes the Attachment from the Attachments container and marks it for deletion</value>
  </data>
  <data name="BlogApplicationCompositeRoot_BlogsHelp" xml:space="preserve">
    <value>Gets the Blogs container containing the Blogs for this BlogApplication</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlogHelp" xml:space="preserve">
    <value>Creates a new Blog using the specified parameters</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_BlogTypeHelp" xml:space="preserve">
    <value>The BlogType to assign to the new Blog</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_EarningsHelp" xml:space="preserve">
    <value>The earnings goal for the new Blog</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_IsActiveHelp" xml:space="preserve">
    <value>Flag to indicate if the new Blog is Active</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_NameHelp" xml:space="preserve">
    <value>The name to assign to the new Blog</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_PublishDateHelp" xml:space="preserve">
    <value>The date the Blog is to be published</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_RatingHelp" xml:space="preserve">
    <value>The rating to assign to the new Blog</value>
  </data>
  <data name="BlogCompositeContainer_CreateNewBlog_ReturnValueHelp" xml:space="preserve">
    <value>The newly created Blog</value>
  </data>
  <data name="BlogCompositeContainer_LoadBlogHelp" xml:space="preserve">
    <value>Loads a Blog into the Blogs container using the supplied Name</value>
  </data>
  <data name="BlogCompositeContainer_LoadBlog_NameHelp" xml:space="preserve">
    <value>The Name of the Blog to load</value>
  </data>
  <data name="BlogComposite_BlogTypeHelp" xml:space="preserve">
    <value>Gets or sets the BlogType - either public or personal</value>
  </data>
  <data name="BlogComposite_EarningsHelp" xml:space="preserve">
    <value>Gets or sets the expected Earnings of the Blog</value>
  </data>
  <data name="BlogComposite_IdHelp" xml:space="preserve">
    <value>Gets the Id assigned to the Blog</value>
  </data>
  <data name="BlogComposite_IsActiveHelp" xml:space="preserve">
    <value>Gets or sets a flag indictating if the Blog is active</value>
  </data>
  <data name="BlogComposite_NameHelp" xml:space="preserve">
    <value>Gets or sets the Name assigned to the Blog</value>
  </data>
  <data name="BlogComposite_PostsHelp" xml:space="preserve">
    <value>Gets the Posts container containing the Posts associated with the Blog</value>
  </data>
  <data name="BlogComposite_PublishDateHelp" xml:space="preserve">
    <value>Gets or sets the publication date of the Blog</value>
  </data>
  <data name="BlogComposite_RatingHelp" xml:space="preserve">
    <value>Gets or sets the Rating of the Blog</value>
  </data>
  <data name="BlogComposite_RemoveHelp" xml:space="preserve">
    <value>Removes the Blog from the Blogs container and marks it for deletion</value>
  </data>
  <data name="BlogComposite_SaveHelp" xml:space="preserve">
    <value>Saves the Blog to the database</value>
  </data>
  <data name="CommentCompositeContainer_CreateNewCommentHelp" xml:space="preserve">
    <value>Creates a new Comment using the specified parameters</value>
  </data>
  <data name="CommentCompositeContainer_CreateNewComment_ReturnValueHelp" xml:space="preserve">
    <value>The newly created Comment</value>
  </data>
  <data name="CommentCompositeContainer_CreateNewComment_TextHelp" xml:space="preserve">
    <value>The text to assign to the new Comment</value>
  </data>
  <data name="CommentComposite_IdHelp" xml:space="preserve">
    <value>Gets the Id assigned to the Comment</value>
  </data>
  <data name="CommentComposite_RemoveHelp" xml:space="preserve">
    <value>Removes the Comment from the Comments container and marks it for deletion</value>
  </data>
  <data name="CommentComposite_TextHelp" xml:space="preserve">
    <value>Gets or sets the Text of the Comment</value>
  </data>
  <data name="CommentsCompositeContainer_CommentsHelp" xml:space="preserve">
    <value>Gets the Comments belonging to the Comments container</value>
  </data>
  <data name="PostCompositeContainer_CreateNewPostHelp" xml:space="preserve">
    <value>Creates a new Post using the specified parameters</value>
  </data>
  <data name="PostCompositeContainer_CreateNewPost_ReturnValueHelp" xml:space="preserve">
    <value>The newly created Post</value>
  </data>
  <data name="PostCompositeContainer_CreateNewPost_TextHelp" xml:space="preserve">
    <value>The Text of the new Blog</value>
  </data>
  <data name="PostCompositeContainer_CreateNewPost_TitleHelp" xml:space="preserve">
    <value>The Title to assign to the new Blog</value>
  </data>
  <data name="PostCompositeContainer_LoadPostsHelp" xml:space="preserve">
    <value>Loads all the Posts assigned to this Blog</value>
  </data>
  <data name="PostCompositeContainer_LoadPostsPagedHelp" xml:space="preserve">
    <value>Loads Posts from the Blog using the supplied starting and ending indicies</value>
  </data>
  <data name="PostCompositeContainer_LoadPostsPaged_PageEndHelp" xml:space="preserve">
    <value>The ending index (1-based) of the record</value>
  </data>
  <data name="PostCompositeContainer_LoadPostsPaged_PageStartHelp" xml:space="preserve">
    <value>The starting index (1-based) of the record</value>
  </data>
  <data name="PostCompositeContainer_PostsHelp" xml:space="preserve">
    <value>Gets the Posts belonging to the Posts container</value>
  </data>
  <data name="PostComposite_AttachmentsHelp" xml:space="preserve">
    <value>Gets the Attachments container containing the Attachments associated with the Post</value>
  </data>
  <data name="PostComposite_CommentsHelp" xml:space="preserve">
    <value>Gets the Comments container containing the Comments associated with the Post</value>
  </data>
  <data name="PostComposite_IdHelp" xml:space="preserve">
    <value>Gets the Id assigned to the Post</value>
  </data>
  <data name="PostComposite_RemoveHelp" xml:space="preserve">
    <value>Removes the Post from the Posts container and marks it for deletion</value>
  </data>
  <data name="PostComposite_TextHelp" xml:space="preserve">
    <value>Gets or sets the Text of the Post</value>
  </data>
  <data name="PostComposite_TitleHelp" xml:space="preserve">
    <value>Gets or Sets the Title of the Post</value>
  </data>
</root>